# Generated by Django 4.1 on 2023-10-29 17:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='название')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'грейд',
                'verbose_name_plural': 'грейды',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Kanban',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='название')),
                ('order_number', models.PositiveSmallIntegerField(unique=True, verbose_name='номер по порядку')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('color', models.CharField(blank=True, max_length=16, validators=[utils.validators.validate_color_format], verbose_name='цвет')),
            ],
            options={
                'verbose_name': 'канбан этап',
                'verbose_name_plural': 'этапы канбана',
                'ordering': ('order_number',),
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='название')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('salary_from', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='зарплата от')),
                ('salary_to', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='зарплата до')),
                ('company', models.CharField(blank=True, max_length=150, verbose_name='компания')),
                ('is_active', models.BooleanField(default=True, verbose_name='активная')),
                ('is_published', models.BooleanField(default=False, verbose_name='публичная')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('image', models.ImageField(blank=True, upload_to='vacancies_images/', verbose_name='изображение')),
                ('language_level', models.CharField(blank=True, choices=[('A1', 'A1'), ('A2', 'A2'), ('B1', 'B1'), ('B2', 'B2'), ('C1', 'C1'), ('C2', 'C2')], max_length=150, verbose_name='уровень языка')),
                ('work_experience', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Без опыта'), (5, 'Менее 6 месяцев'), (9, 'Менее года'), (10, 'Один год'), (20, 'Два года'), (30, 'Три года'), (40, 'Четыре года'), (50, 'Пять лет'), (51, 'Более пяти лет')], verbose_name='опыт работы')),
                ('education', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Неоконченное среднее'), (1, 'Среднее образование'), (2, 'Среднее профессиональное'), (3, 'Бакалавр'), (4, 'Магистр'), (5, 'Докторантура')], verbose_name='уровень образования')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vacancies', to=settings.AUTH_USER_MODEL, verbose_name='автор')),
                ('course_list', models.ManyToManyField(blank=True, to='students.course', verbose_name='курсы')),
                ('grade', models.ManyToManyField(blank=True, related_name='vacancies', to='vacancies.grade', verbose_name='грейды')),
                ('hard_skill', models.ManyToManyField(blank=True, related_name='vacancies', to='students.hardskill', verbose_name='навыки')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.language', verbose_name='язык')),
                ('location', models.ManyToManyField(blank=True, to='students.location', verbose_name='местонахождения')),
                ('office_format', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='students.officeformat', verbose_name='формат места работы')),
                ('specialty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='vacancies', to='students.specialty', verbose_name='специальность')),
                ('work_format', models.ManyToManyField(blank=True, related_name='vacancies', to='students.workformat', verbose_name='формат работы')),
                ('work_schedule', models.ManyToManyField(blank=True, related_name='vacancies', to='students.workschedule', verbose_name='графики работы')),
            ],
            options={
                'verbose_name': 'вакансия',
                'verbose_name_plural': 'вакансии',
                'ordering': ('is_active', '-updated_at'),
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(choices=[('salary_from', 'зарплата от'), ('salary_to', 'зарплата до'), ('activity_level', 'активность'), ('created_at', 'дата создания'), ('updated_at', 'дата изменения'), ('current_location', 'местонахождение'), ('location_to_relocate', 'местонахождения для переезда'), ('course_list', 'курсы'), ('hard_skills', 'навыки'), ('specialty', 'специальность'), ('employment', 'виды занятости'), ('work_schedule', 'графики работы'), ('work_format', 'форматы работы'), ('office_format', 'форматы места работы'), ('education', 'уровень образования'), ('work_experience', 'опыт работы')], max_length=150, verbose_name='поле фильтра')),
                ('filter_value', models.CharField(max_length=150, verbose_name='значение фильтра')),
                ('vacancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='vacancies.vacancy', verbose_name='вакансия')),
            ],
            options={
                'verbose_name': 'фильтр',
                'verbose_name_plural': 'фильтры',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(limit_value=1), django.core.validators.MaxValueValidator(limit_value=5)], verbose_name='оценка студента на вакансию')),
                ('notes', models.TextField(blank=True, verbose_name='заметки HR по студенту на вакансию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('kanban_position', models.ForeignKey(default=0, on_delete=django.db.models.deletion.RESTRICT, related_name='students', to='vacancies.kanban', verbose_name='позиция в канбане')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vacancies', to='students.student', verbose_name='студент')),
                ('vacancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='vacancies.vacancy', verbose_name='вакансия')),
            ],
            options={
                'verbose_name': 'претендент на вакансию',
                'verbose_name_plural': 'претенденты на вакансии',
                'ordering': ('id',),
            },
        ),
    ]
